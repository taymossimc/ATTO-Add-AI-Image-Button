YUI.add("moodle-atto_aimagic-button",function(e,t){var n=!0,o="Atto AI Magic: ",r=function(e){return typeof e=="string"?e:e===null||e===undefined?"":e.toString()};function s(e,t,n){if(e&&t<e.length)return e.substring(t,n);return e}e.namespace("M.atto_aimagic").Button=e.Base.create("button",e.M.editor_atto.EditorPlugin,[],{initializer:function(){if(n){console.log(o+"initializing plugin")}this.addButton({icon:"iconOne",iconComponent:"atto_aimagic",callback:this._displayDialogue,callbackArgs:{withContent:!0}}),this._apiSettings={apiKey:this.get("host").get("apiKey"),assistantId:this.get("host").get("assistantId"),baseUrl:this.get("host").get("apiBaseUrl")||"https://api.openai.com",timeout:this.get("host").get("timeout")||30}},_displayDialogue:function(){if(n){console.log(o+"displaying dialogue")}var t=this.getDialogue({headerContent:M.util.get_string("dialogtitle","atto_aimagic"),width:"600px",focusAfterHide:!0});t.set("bodyContent",this._getDialogueContent()).show(),t.centerDialogue()},_getDialogueContent:function(){if(n){console.log(o+"creating dialogue content")}var t=e.Node.create('<div class="atto_aimagic_dialogue"></div>'),r=this.get("host"),s=r.getSelection();this._currentSelection=s;var i=s?s.toString():"";if(n){console.log(o+"Selection content: "+i)}var a=e.Node.create('<div class="mb-3"><label for="'+r.get("elementid")+'_prompt" class="form-label">'+M.util.get_string("promptlabel","atto_aimagic")+"</label>"+'<textarea class="form-control" id="'+r.get("elementid")+'_prompt" rows="4" placeholder="'+M.util.get_string("promptplaceholder","atto_aimagic")+'"></textarea></div>'),l=M.cfg.wwwroot+"/lib/editor/atto/plugins/aimagic/pix/ai_assisted_button.svg",c=e.Node.create('<div class="mb-3 insertion-mode-toggle"'+(i?"":'style="display:none"')+">"+'<label class="insertion-mode-label form-label">'+M.util.get_string("insertionmodelabel","atto_aimagic")+"</label>"+'<div class="toggle-switch-container">'+'<label class="toggle-switch">'+'<input type="checkbox" id="'+r.get("elementid")+'_insertion_mode_toggle" class="toggle-input"/>'+'<span class="toggle-slider"></span>'+"</label>"+'<span class="toggle-label-replace">'+M.util.get_string("replacecontent","atto_aimagic")+"</span>"+'<span class="toggle-label-add">'+M.util.get_string("addcontent","atto_aimagic")+"</span>"+"</div>"+"</div>"),g=e.Node.create('<div class="aimagic-debug" style="'+(n?'display:block':'display:none')+'"><h4>Debug Info</h4><div class="debug-content"></div></div>'),d=e.Node.create('<div class="d-flex justify-content-end gap-2 mt-3">'+'<button class="btn btn-secondary submit-button">'+M.util.get_string("generatebutton","atto_aimagic")+"</button>"+'<button class="btn btn-secondary cancel-button">'+M.util.get_string("cancel","atto_aimagic")+"</button>"+"</div>");if(n){console.log(o+"SVG Icon URL",{url:l})}t.appendChild(a),t.appendChild(c),t.appendChild(g),t.appendChild(d);var u=t.one(".submit-button"),h=t.one(".cancel-button");u&&u.on("click",function(e){e.preventDefault();var n=t.one("#"+r.get("elementid")+"_prompt").get("value");if(n&&n.trim()){this._callOpenAI(n,i)}else{var s=M.util.get_string("noprompt","atto_aimagic");if(typeof s==="undefined"){s="Please enter a prompt before generating content."}alert(s)}},this),h&&h.on("click",function(e){e.preventDefault(),this.getDialogue().hide()},this);this._dialogueContent=t;return t},_callOpenAI:function(e,t){if(n){console.log(o+"Calling OpenAI API")}var r=this,s=r.get("host").get("apiBaseUrl")||"https://api.openai.com",i=r.get("host").get("apiKey")||"",a=r.get("host").get("assistantId")||"",l=r.get("host").get("timeout")||3e4,c,g;if(!i){g="API key is not set. Please configure the plugin.";if(n){console.error(o+g)}r._handleApiError({message:g});return}if(!a){g="Assistant ID is not set. Please configure the plugin.";if(n){console.error(o+g)}r._handleApiError({message:g});return}c=s+"/v1/threads";try{if(n){console.log(o+"Creating thread")}var d=new XMLHttpRequest;d.open("POST",c,!0),d.setRequestHeader("Content-Type","application/json"),d.setRequestHeader("OpenAI-Beta","assistants=v1"),d.setRequestHeader("Authorization","Bearer "+i),d.timeout=l,d.onreadystatechange=function(){if(d.readyState===4){if(d.status>=200&&d.status<300){try{var e=JSON.parse(d.responseText);u(e.id)}catch(t){if(n){console.error(o+"Error parsing thread response",t)}r._handleApiError({message:"Error parsing thread response: "+t.message})}}else{try{var s=JSON.parse(d.responseText);g=s.error&&s.error.message||"Unknown error";if(n){console.error(o+"Error creating thread: "+g)}}catch(t){g="Error creating thread: "+d.status+" "+d.statusText;if(n){console.error(o+g)}}r._handleApiError({message:g})}}},d.onerror=function(){g="Network error occurred while creating thread";if(n){console.error(o+g)}r._handleApiError({message:g})},d.ontimeout=function(){g="Request timed out while creating thread";if(n){console.error(o+g)}r._handleApiError({message:g})},d.send(JSON.stringify({}))}catch(f){g="Exception creating thread: "+f.message;if(n){console.error(o+g)}r._handleApiError({message:g})}function u(s){if(n){console.log(o+"Thread created with ID: "+s)}try{var c=s+"/messages",d=new XMLHttpRequest;d.open("POST",c=s+"/messages",!0),d.setRequestHeader("Content-Type","application/json"),d.setRequestHeader("OpenAI-Beta","assistants=v1"),d.setRequestHeader("Authorization","Bearer "+i),d.timeout=l,d.onreadystatechange=function(){if(d.readyState===4){if(d.status>=200&&d.status<300){try{var t=JSON.parse(d.responseText);if(n){console.log(o+"Message created with ID: "+t.id)}h(s)}catch(e){if(n){console.error(o+"Error parsing message response",e)}r._handleApiError({message:"Error parsing message response: "+e.message})}}else{try{var c=JSON.parse(d.responseText);g=c.error&&c.error.message||"Unknown error";if(n){console.error(o+"Error creating message: "+g)}}catch(e){g="Error creating message: "+d.status+" "+d.statusText;if(n){console.error(o+g)}}r._handleApiError({message:g})}}},d.onerror=function(){g="Network error occurred while creating message";if(n){console.error(o+g)}r._handleApiError({message:g})},d.ontimeout=function(){g="Request timed out while creating message";if(n){console.error(o+g)}r._handleApiError({message:g})};if(n){console.log(o+"Creating message with content: "+e)}d.send(JSON.stringify({role:"user",content:e}))}catch(f){g="Exception creating message: "+f.message;if(n){console.error(o+g)}r._handleApiError({message:g})}}function h(e){if(n){console.log(o+"Running assistant on thread: "+e)}try{var s=e+"/runs",c=new XMLHttpRequest;c.open("POST",s,!0),c.setRequestHeader("Content-Type","application/json"),c.setRequestHeader("OpenAI-Beta","assistants=v1"),c.setRequestHeader("Authorization","Bearer "+i),c.timeout=l,c.onreadystatechange=function(){if(c.readyState===4){if(c.status>=200&&c.status<300){try{var t=JSON.parse(c.responseText);if(n){console.log(o+"Run created with ID: "+t.id)}p(e,t.id)}catch(s){if(n){console.error(o+"Error parsing run response",s)}r._handleApiError({message:"Error parsing run response: "+s.message})}}else{try{var d=JSON.parse(c.responseText);g=d.error&&d.error.message||"Unknown error";if(n){console.error(o+"Error creating run: "+g)}}catch(s){g="Error creating run: "+c.status+" "+c.statusText;if(n){console.error(o+g)}}r._handleApiError({message:g})}}},c.onerror=function(){g="Network error occurred while creating run";if(n){console.error(o+g)}r._handleApiError({message:g})},c.ontimeout=function(){g="Request timed out while creating run";if(n){console.error(o+g)}r._handleApiError({message:g})},c.send(JSON.stringify({assistant_id:a}))}catch(f){g="Exception creating run: "+f.message;if(n){console.error(o+g)}r._handleApiError({message:g})}}function p(e,t){if(n){console.log(o+"Checking run status: "+t)}var s=0,a=15,c=function(){if(s>=a){g="Max poll attempts reached while checking run status";if(n){console.error(o+g)}r._handleApiError({message:g});return}s++;try{var d=new XMLHttpRequest;d.open("GET",e+"/runs/"+t,!0),d.setRequestHeader("Content-Type","application/json"),d.setRequestHeader("OpenAI-Beta","assistants=v1"),d.setRequestHeader("Authorization","Bearer "+i),d.timeout=l,d.onreadystatechange=function(){if(d.readyState===4){if(d.status>=200&&d.status<300){try{var s=JSON.parse(d.responseText);if(n){console.log(o+"Run status: "+s.status)}if(s.status==="completed"){m(e)}else if(s.status==="failed"||s.status==="cancelled"){g="Run failed or was cancelled: "+s.status;if(n){console.error(o+g)}r._handleApiError({message:g})}else if(s.status==="expired"){g="Run expired";if(n){console.error(o+g)}r._handleApiError({message:g})}else{setTimeout(c,2e3)}}catch(t){if(n){console.error(o+"Error parsing run status response",t)}r._handleApiError({message:"Error parsing run status response: "+t.message})}}else{try{var a=JSON.parse(d.responseText);g=a.error&&a.error.message||"Unknown error";if(n){console.error(o+"Error checking run status: "+g)}}catch(t){g="Error checking run status: "+d.status+" "+d.statusText;if(n){console.error(o+g)}}r._handleApiError({message:g})}}},d.onerror=function(){g="Network error occurred while checking run status";if(n){console.error(o+g)}r._handleApiError({message:g})},d.ontimeout=function(){g="Request timed out while checking run status";if(n){console.error(o+g)}r._handleApiError({message:g})},d.send()}catch(f){g="Exception checking run status: "+f.message;if(n){console.error(o+g)}r._handleApiError({message:g})}};c()}function m(e){if(n){console.log(o+"Retrieving messages from thread: "+e)}try{var t=e+"/messages",s=new XMLHttpRequest;s.open("GET",t,!0),s.setRequestHeader("Content-Type","application/json"),s.setRequestHeader("OpenAI-Beta","assistants=v1"),s.setRequestHeader("Authorization","Bearer "+i),s.timeout=l,s.onreadystatechange=function(){if(s.readyState===4){if(s.status>=200&&s.status<300){try{var a=JSON.parse(s.responseText),c=a.data&&a.data.length>0?a.data[0]:null;if(c&&c.content&&c.content.length>0){var d=c.content[0];if(d.type==="text"){var u=d.text.value;if(n){console.log(o+"Retrieved assistant response: "+("undefined"!==typeof s?s(u,0,100):u.substring(0,100))+(u.length>100?"...":""))}if(r._dialogueContent){try{var h=r.get("host").get("elementid")+"_insertion_mode_toggle",p=r._dialogueContent.one("#"+h),m=p?p.get("checked"):!1;if(n){console.log(o+"Insertion mode: "+(m?"Add":"Replace"))}r._insertContent(u,m)}catch(t){if(n){console.error(o+"Error processing toggle state",t)}r._insertContent(u,!1)}}else{if(n){console.error(o+"Dialogue content is null, can't insert response")}r._insertContent(u,!1)}}else{g="Unexpected content type in response: "+d.type;if(n){console.error(o+g)}r._handleApiError({message:g})}}else{g="No valid content in assistant response";if(n){console.error(o+g)}r._handleApiError({message:g})}}catch(t){if(n){console.error(o+"Error parsing messages response",t)}r._handleApiError({message:"Error parsing messages response: "+t.message})}}else{try{var f=JSON.parse(s.responseText);g=f.error&&f.error.message||"Unknown error";if(n){console.error(o+"Error retrieving messages: "+g)}}catch(t){g="Error retrieving messages: "+s.status+" "+s.statusText;if(n){console.error(o+g)}}r._handleApiError({message:g})}}},s.onerror=function(){g="Network error occurred while retrieving messages";if(n){console.error(o+g)}r._handleApiError({message:g})},s.ontimeout=function(){g="Request timed out while retrieving messages";if(n){console.error(o+g)}r._handleApiError({message:g})},s.send()}catch(f){g="Exception retrieving messages: "+f.message;if(n){console.error(o+g)}r._handleApiError({message:g})}}},_handleApiError:function(e){if(n){console.error(o+"API error: ",e.message)}var t=this.getDialogue();if(t&&t.get("visible")){var r='<div class="alert alert-danger" role="alert">'+e.message+"</div>";t.set("bodyContent",r)}else{alert("AI Magic Error: "+e.message)}},_insertContent:function(e,t){if(n){console.log(o+"Inserting content, add mode: "+(t?"true":"false"))}var r=this.get("host");if(e===null||e===undefined){e=""}if(typeof e!=="string"){if(n){console.warn(o+"Content is not a string, attempting to convert")}try{e=e.toString()}catch(a){if(n){console.error(o+"Failed to convert content to string",a)}e=""}}if(n){console.log(o+"Content prepared for insertion, length: "+e.length)}this.getDialogue({focusAfterHide:false}).hide();try{r.focus();if(t){r.insertContentAtFocusPoint(e);if(n){console.log(o+"Content added at cursor position")}}else{var s=r.getSelection();if(s&&s.toString().length>0){try{document.execCommand("insertText",false,e);if(n){console.log(o+"Content replaced selection using execCommand")}}catch(a){if(n){console.error(o+"execCommand failed, trying alternative",a)}r.setSelection(s);var i=r.getSelectionRange();if(i){r.insertContentAtFocusPoint(e);if(n){console.log(o+"Content replaced using fallback method")}}else{r.insertContentAtFocusPoint(e);if(n){console.log(o+"Content inserted at cursor (no selection range)")}}}}else{r.insertContentAtFocusPoint(e);if(n){console.log(o+"Content inserted at cursor (no selection)")}}}this.markUpdated()}catch(a){if(n){console.error(o+"Error inserting content:",a)}try{if(n){console.log(o+"Trying ultimate fallback insertion")}r.focus();r.insertContentAtFocusPoint(e);this.markUpdated();if(n){console.log(o+"Ultimate fallback insertion completed")}}catch(h){if(n){console.error(o+"Ultimate fallback insertion also failed:",h)}}}}}); 